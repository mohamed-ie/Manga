package com.manga.core.design_system.theme
import androidx.compose.ui.graphics.Color

val primary = Color(0xFFEBB467) // Orange-like color for buttons and highlights
val onPrimary = Color(0xFF000000) // Black or dark color for text on primary
val primaryContainer = Color(0xFF1C1C1E) // Dark background container color
val onPrimaryContainer = Color(0xFFFFFFFF) // White for text/icons on dark containers
val inversePrimary = Color(0xFFEBB467) // Same as primary for inverse color
val secondary = Color(0xFF474B56) // Darker gray for secondary elements
val onSecondary = Color(0xFFFFFFFF) // White for text/icons on secondary
val secondaryContainer = Color(0xFF2C2C2E) // Slightly lighter dark background container
val onSecondaryContainer = Color(0xFFFFFFFF) // White for text/icons on secondary container
val tertiary = Color(0xFFEBB467) // Same as primary for consistency
val onTertiary = Color(0xFF000000) // Black or dark color for text on tertiary
val tertiaryContainer = Color(0xFF1C1C1E) // Same as primary container
val onTertiaryContainer = Color(0xFFFFFFFF) // White for text/icons on tertiary container
val background = Color(0xFF121212) // Dark background color
val onBackground = Color(0xFFFFFFFF) // White text on dark background
val surface = Color(0xFF1C1C1E) // Dark surface color similar to primary container
val onSurface = Color(0xFFFFFFFF) // White text/icons on surfaces
val surfaceVariant = Color(0xFF474B56) // Dark gray variant for different surface elements
val onSurfaceVariant = Color(0xFFFFFFFF) // White for text/icons on surface variant
val surfaceTint = Color(0xFFEBB467) // Same as primary for tinting
val inverseSurface = Color(0xFFFFFFFF) // White for inverse surface
val inverseOnSurface = Color(0xFF121212) // Dark for text on inverse surface
val error = Color(0xFFFF0000) // Bright red for error states
val onError = Color(0xFFFFFFFF) // White for text/icons on error
val errorContainer = Color(0xFF93000A) // Darker red for error containers
val onErrorContainer = Color(0xFFFFFFFF) // White for text on error containers
val outline = Color(0xFF474B56) // Dark gray for outlines
val outlineVariant = Color(0xFF2C2C2E) // Slightly lighter gray for variant outlines
val scrim = Color(0x66000000) // Black with transparency for scrims
val surfaceBright = Color(0xFF1C1C1E) // Same as surface for bright elements
val surfaceDim = Color(0xFF121212) // Same as background for dim elements
val surfaceContainer = Color(0xFF1C1C1E) // Same as surface for container elements
val surfaceContainerHigh = Color(0xFF2C2C2E) // Slightly lighter for high containers
val surfaceContainerHighest = Color(0xFF474B56) // Dark gray for highest containers
val surfaceContainerLow = Color(0xFF121212) // Same as background for low containers
val surfaceContainerLowest = Color(0xFF1C1C1E) // Same as surface for lowest containers
